<?php

namespace Newscoop\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class NewscoopImageRenditionProxy extends \Newscoop\Image\Rendition implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getWidth()
    {
        $this->__load();
        return parent::getWidth();
    }

    public function getHeight()
    {
        $this->__load();
        return parent::getHeight();
    }

    public function getSpecs()
    {
        $this->__load();
        return parent::getSpecs();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setCoords($coords)
    {
        $this->__load();
        return parent::setCoords($coords);
    }

    public function getPreview($width, $height)
    {
        $this->__load();
        return parent::getPreview($width, $height);
    }

    public function getThumbnail(\Newscoop\Image\ImageInterface $image, \Newscoop\Image\ImageService $imageService)
    {
        $this->__load();
        return parent::getThumbnail($image, $imageService);
    }

    public function generateImage($imagePath)
    {
        $this->__load();
        return parent::generateImage($imagePath);
    }

    public function generate(\Newscoop\Image\ImageInterface $image)
    {
        $this->__load();
        return parent::generate($image);
    }

    public function getAspectRatio()
    {
        $this->__load();
        return parent::getAspectRatio();
    }

    public function getSelectArea(\Newscoop\Image\ImageInterface $image)
    {
        $this->__load();
        return parent::getSelectArea($image);
    }

    public function getMinSize(\Newscoop\Image\ImageInterface $image)
    {
        $this->__load();
        return parent::getMinSize($image);
    }

    public function isCrop()
    {
        $this->__load();
        return parent::isCrop();
    }

    public function fits(\Newscoop\Image\ImageInterface $image)
    {
        $this->__load();
        return parent::fits($image);
    }

    public function setOffset($offset)
    {
        $this->__load();
        return parent::setOffset($offset);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'name', 'width', 'height', 'specs', 'offset');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}